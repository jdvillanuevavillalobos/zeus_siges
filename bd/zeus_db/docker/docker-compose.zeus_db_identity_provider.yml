services:
  postgres_zeus_db_identity_provider:
    build:
      context: ./zeus_db_identity_provider
      dockerfile: Dockerfile
    container_name: postgres_zeus_db_identity_provider
    restart: always
    env_file:
      - ../config/.env.${APP_ENV}  # ðŸ”¥ Ahora buscarÃ¡ el archivo en `zeus_db/config/`
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_zeus_db_identity_provider_data:/var/lib/postgresql/data
      - ./zeus_db_identity_provider/init-scripts/postgresql:/docker-entrypoint-initdb.d
      - ./zeus_db_identity_provider/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./zeus_db_identity_provider/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - zeus_network

  postgres_zeus_db_identity_provider_replica:
    image: postgres:15
    container_name: postgres_zeus_db_identity_provider_replica
    restart: always
    env_file:
      - ../config/.env.${APP_ENV}  # ðŸ”¥ Ahora buscarÃ¡ el archivo en `zeus_db/config/`
    environment:
      REPLICATION_USER: "${REPLICATION_USER}"
      REPLICATION_PASSWORD: "${REPLICATION_PASSWORD}"
      PRIMARY_IP: "${PRIMARY_IP}"
      REPLICATION_SLOT: "${REPLICATION_SLOT}"
    ports:
      - "${DB_REPLICA_PORT}:5432"
    volumes:
      - postgres_zeus_db_identity_provider_replica_data:/var/lib/postgresql/data
      - ./zeus_db_identity_provider/replica/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./zeus_db_identity_provider/replica/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./zeus_db_identity_provider/replica/setup_replica.sh:/docker-entrypoint-initdb.d/setup_replica.sh
    command: ["/bin/bash", "/docker-entrypoint-initdb.d/setup_replica.sh"]
    depends_on:
      - postgres_zeus_db_identity_provider
    networks:
      - zeus_network

volumes:
  postgres_zeus_db_identity_provider_data:
  postgres_zeus_db_identity_provider_replica_data:

networks:
  zeus_network:
    driver: bridge
